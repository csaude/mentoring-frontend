import{c as v,aa as $e,C as we,g as be,a7 as A,z as _e,a1 as ve,a2 as Ie,h as F,ab as Re}from"./index.8cc0be75.js";import{v as Ke,Q as Ee,e as Se}from"./QBtn.bc754139.js";import{a as Me}from"./axios.0ed95acd.js";const fi={dark:{type:Boolean,default:null}};function pi(r,e){return v(()=>r.dark===null?e.dark.isActive:r.dark)}function yi(){let r=null;const e=be();function t(){r!==null&&(clearTimeout(r),r=null)}return $e(t),we(t),{removeTimeout:t,registerTimeout(i,s){t(),Ke(e)===!1&&(r=setTimeout(()=>{r=null,i()},s))}}}function De(){const r=v(()=>!A.is.mobile),e=v(()=>!!A.is.desktop),t=v(()=>!!A.is.mobile),i=v(()=>!!A.is.electron),s=v(()=>(r.value,!0));return{website:r,isDeskTop:e,isMobile:t,isElectron:i,isOnline:s}}var mi=_e({name:"QAvatar",props:{...ve,fontSize:String,color:String,textColor:String,icon:String,square:Boolean,rounded:Boolean},setup(r,{slots:e}){const t=Ie(r),i=v(()=>"q-avatar"+(r.color?` bg-${r.color}`:"")+(r.textColor?` text-${r.textColor} q-chip--colored`:"")+(r.square===!0?" q-avatar--square":r.rounded===!0?" rounded-borders":"")),s=v(()=>r.fontSize?{fontSize:r.fontSize}:null);return()=>{const n=r.icon!==void 0?[F(Ee,{name:r.icon})]:void 0;return F("div",{class:i.value,style:t.value},[F("div",{class:"q-avatar__content row flex-center overflow-hidden",style:s.value},Se(e.default,n))])}}});De();const oe=Me.create({baseURL:"http://localhost:8087/api",responseType:"json",validateStatus(r){return r>=200&&r<300}});function Oe(){localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),localStorage.removeItem("username"),localStorage.removeItem("userInfo"),localStorage.removeItem("tokenExpiration"),window.location.reload()}function Pe(){localStorage.setItem("tokenExpiration",String(Date.now()+6e5))}oe.interceptors.request.use(r=>{const e=localStorage.getItem("userInfo");if(r.headers={Accept:"application/json"},r.url==="/province")delete r.headers.Authorization;else if(e!=null&&e!="null"){const t=localStorage.getItem("tokenExpiration"),i=Date.now();if(t&&i<Number(t))Pe();else{localStorage.setItem("tokenExpiration","0"),Oe();return}const s=localStorage.getItem("access_token");r.headers.Authorization=`Bearer ${s}`}else delete r.headers.Authorization;return r},r=>{Promise.reject(r)});var gi=()=>oe;function Ce(r,e,t){switch(t){case">":return r>e;case">=":return r>=e;case"<":return r<e;case"<=":return r<=e;case"=":return r===e;case"!=":return r!==e;default:return r===e}}function U(r){return r==null}function he(r){return r instanceof Date&&!Number.isNaN(r.getTime())&&typeof r.toISOString=="function"}function u(r){return Array.isArray(r)}function z(r){return typeof r=="function"}function E(r){return Ne(r)===0}function Ne(r){return u(r)?r.length:Object.keys(r).length}function Te(r,e,t,i="SORT_REGULAR"){let s=-1;const n=r.map(a=>({criteria:e.map(h=>{if(typeof h=="function")return h(a);const c=ce(a,h,!1);return he(c)?new Date(c).getTime():c}),index:++s,value:a}));return Ae(n,(a,o)=>xe(a,o,t,i))}function Ae(r,e){let t=r.length;r.sort(e);const i=[];for(;t--;)i[t]=r[t].value;return i}function xe(r,e,t,i){let s=-1;const n=r.criteria,a=e.criteria,o=n.length;for(;++s<o;){const h=Fe(n[s],a[s],i);if(h){const c=t[s];return h*(c==="desc"?-1:1)}}return r.index-e.index}function Fe(r,e,t){if(r!==e){const i=r!==void 0,s=r===null,n=r===r,a=e!==void 0,o=e===null;return(typeof r!="number"||typeof e!="number")&&(r=String(r),e=String(e),t==="SORT_FLAG_CASE"&&(r=r.toUpperCase(),e=e.toUpperCase())),!o&&r>e||s&&a||!i||!n?1:-1}return 0}function ze(r,e){return r.reduce((t,i)=>{const s=e(i);return t[s]===void 0&&(t[s]=[]),t[s].push(i),t},{})}function x(r){throw new Error(["[Pinia ORM]"].concat(r).join(" "))}function C(r,e){r||x(e)}function He(r,e){let t="",i=r;for(;i--;)t+=e[Math.random()*64|0];return t}function We(r,e){const t=e?{key:r,params:e}:{key:r},i=JSON.stringify(t);return typeof process=="undefined"?btoa(i):i}function ce(r,e,t=!0){e=typeof e=="string"?e.split("."):e;const i=e.shift();return r&&Object.prototype.hasOwnProperty.call(r,i)&&e.length===0?r[i]:!r||!Object.prototype.hasOwnProperty.call(r,i)?t?r:void 0:ce(r[i],e)}function V(r,e){if(r===e)return!0;if(r instanceof Date&&e instanceof Date)return r.getTime()===e.getTime();if(!r||!e||typeof r!="object"&&typeof e!="object")return r===e;if(r.prototype!==e.prototype)return!1;const t=Object.keys(r);return t.length!==Object.keys(e).length?!1:t.every(i=>V(r[i],e[i]))}class qe{constructor(e,t={},i={}){if(!e||typeof e!="string")throw new Error(`Expected a string key for Entity, but found ${e}.`);const{idAttribute:s="id",mergeStrategy:n=(o,h)=>({...o,...h}),processStrategy:a=o=>({...o})}=i;this._key=e,this._getId=s,this._mergeStrategy=n,this._processStrategy=a,this.define(t)}get key(){return this._key}define(e){this.schema=Object.keys(e).reduce((t,i)=>{const s=e[i];return{...t,[i]:s}},this.schema||{})}getId(e,t,i){return this._getId(e,t,i)}merge(e,t){return this._mergeStrategy(e,t)}normalize(e,t,i,s,n,a){const o=this.getId(e,t,i),h=this.key;if(h in a||(a[h]={}),o in a[h]||(a[h][o]=[]),a[h][o].includes(e))return o;a[h][o].push(e);const c=this._processStrategy(e,t,i);return Object.keys(this.schema).forEach(l=>{if(c.hasOwnProperty(l)&&typeof c[l]=="object"){const p=this.schema[l],y=typeof p=="function"?p(e):p;c[l]=s(c[l],c,l,y,n,a)}}),n(this,c,e,t,i),o}}class le{constructor(e,t){t&&(this._schemaAttribute=typeof t=="string"?i=>i[t]:t),this.define(e)}get isSingleSchema(){return!this._schemaAttribute}define(e){this.schema=e}getSchemaAttribute(e,t,i){return!this.isSingleSchema&&this._schemaAttribute(e,t,i)}inferSchema(e,t,i){if(this.isSingleSchema)return this.schema;const s=this.getSchemaAttribute(e,t,i);return this.schema[s]}normalizeValue(e,t,i,s,n,a){const o=this.inferSchema(e,t,i);if(!o)return e;const h=s(e,t,i,o,n,a);return this.isSingleSchema||h===void 0||h===null?h:{id:h,schema:this.getSchemaAttribute(e,t,i)}}}class Le extends le{constructor(e,t){if(!t)throw new Error('Expected option "schemaAttribute" not found on UnionSchema.');super(e,t)}normalize(e,t,i,s,n,a){return this.normalizeValue(e,t,i,s,n,a)}}const Be=r=>{if(Array.isArray(r)&&r.length>1)throw new Error(`Expected schema definition to be a single schema, but found ${r.length}.`);return r[0]},ue=r=>Array.isArray(r)?r:Object.keys(r).map(e=>r[e]),Qe=(r,e,t,i,s,n,a)=>ue(e).map(o=>s(o,t,i,Be(r),n,a));class je extends le{normalize(e,t,i,s,n,a){return ue(e).map(o=>this.normalizeValue(o,t,i,s,n,a)).filter(o=>o!=null)}}const Ue=(r,e,t,i,s,n,a)=>{const o={...e};return Object.keys(r).forEach(h=>{const c=r[h],l=typeof c=="function"?c(e):c,p=s(e[h],e,h,l,n,a);p==null?delete o[h]:o[h]=p}),o},k=(r,e,t,i,s,n)=>typeof r!="object"||!r?r:typeof i=="object"&&(!i.normalize||typeof i.normalize!="function")?(Array.isArray(i)?Qe:Ue)(i,r,e,t,k,s,n):i.normalize(r,e,t,k,s,n),Ve=r=>(e,t,i,s,n)=>{const a=e.key,o=e.getId(i,s,n);a in r||(r[a]={}),r[a][o]=r[a][o]?e.merge(r[a][o],t):t},H={Array:je,Entity:qe,Union:Le},ke=(r,e)=>{if(!r||typeof r!="object")throw new Error(`Unexpected input given to normalize. Expected type to be "object", found "${r===null?"null":typeof r}".`);const t={},i=Ve(t),n=k(r,r,null,e,i,{});return{entities:t,result:n}};var Je=Object.defineProperty,Ge=(r,e,t)=>e in r?Je(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,G=(r,e,t)=>(Ge(r,typeof e!="symbol"?e+"":e,t),t);class de{constructor(e){G(this,"$parameters",{}),this.$self().attributes=e,this.$parameters={...this.$parameters,...this.$self().parameters}}get(e){return e}set(e){return e}static withParameters(e){return this.parameters=e,this}getParameters(){return this.$parameters}$self(){return this.constructor}static newRawInstance(e){return new this(e)}}G(de,"attributes");G(de,"parameters");var Ye=Object.defineProperty,Xe=(r,e,t)=>e in r?Ye(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Z=(r,e,t)=>(Xe(r,typeof e!="symbol"?e+"":e,t),t);class fe{constructor(e){Z(this,"model"),Z(this,"key"),this.model=e,this.key=""}setKey(e){return this.key=e,this}}var Ze=Object.defineProperty,et=(r,e,t)=>e in r?Ze(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,W=(r,e,t)=>(et(r,typeof e!="symbol"?e+"":e,t),t);class m extends fe{constructor(e,t){super(e),W(this,"parent"),W(this,"related"),W(this,"onDeleteMode"),this.parent=e,this.related=t}getRelated(){return this.related}getKeys(e,t){return e.map(i=>i[t])}onDelete(e){return this.onDeleteMode=e,this}mapToDictionary(e,t){return e.reduce((i,s)=>{const[n,a]=t(s);return i[n]||(i[n]=[]),i[n].push(a),i},{})}compositeKeyMapper(e,t,i){u(e)&&u(t)?e.forEach((s,n)=>{i(s,t[n])}):!u(t)&&!u(e)?i(e,t):x(["This relation cant be resolve. Either child or parent doesnt have different key types (composite)",JSON.stringify(e),JSON.stringify(t)])}getKey(e){return u(e)?`[${e.join(",")}]`:e}}var tt=Object.defineProperty,it=(r,e,t)=>e in r?tt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,O=(r,e,t)=>(it(r,typeof e!="symbol"?e+"":e,t),t);class J extends m{constructor(e,t,i,s,n){super(e,e),O(this,"relatedModels"),O(this,"relatedTypes"),O(this,"morphId"),O(this,"morphType"),O(this,"ownerKey"),this.relatedModels=t,this.relatedTypes=this.createRelatedTypes(t),this.morphId=i,this.morphType=s,this.ownerKey=n}createRelatedTypes(e){return e.reduce((t,i)=>(t[i.$entity()]=i,t),{})}getType(){return this.morphType}getRelateds(){return this.relatedModels}define(e){return e.union(this.relatedModels,(t,i,s)=>{const n=i[this.morphType],a=this.relatedTypes[n],o=this.ownerKey||a.$getKeyName();return i[this.morphId]=t[o],n})}attach(e,t){}addEagerConstraints(e,t){}match(e,t,i){const s=this.buildDictionary(i,t);t.forEach(n=>{var c,l;const a=n[this.morphType],o=n[this.morphId],h=(l=(c=s[a])==null?void 0:c[o])!=null?l:null;n.$setRelation(e,h)})}make(e,t){return!e||!t?null:this.relatedTypes[t].$newInstance(e)}buildDictionary(e,t){const i=this.getKeysByEntity(t),s={};for(const n in i){const a=this.relatedTypes[n];C(!!a,[`Trying to load "morph to" relation of \`${n}\``,"but the model could not be found."]);const o=this.ownerKey||a.$getKeyName(),h=e.newQueryWithConstraints(n).whereIn(o,i[n]).get(!1);s[n]=h.reduce((c,l)=>(c[l[o]]=l,c),{})}return s}getKeysByEntity(e){return e.reduce((t,i)=>{const s=i[this.morphType],n=i[this.morphId];return n!==null&&this.relatedTypes[s]!==void 0&&(t[s]||(t[s]=[]),t[s].push(n)),t},{})}}var st=Object.defineProperty,rt=(r,e,t)=>e in r?st(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ee=(r,e,t)=>(rt(r,typeof e!="symbol"?e+"":e,t),t);class T extends fe{constructor(e,t=null){super(e),ee(this,"rawDefaultValue"),ee(this,"isNullable",!0),this.rawDefaultValue=t}get defaultValue(){return typeof this.rawDefaultValue=="function"?this.rawDefaultValue():this.rawDefaultValue}notNullable(){return this.isNullable=!1,this}makeReturn(e,t){return t===void 0?this.defaultValue:t===null?(this.isNullable||this.throwWarning(["is set as non nullable!"]),t):(typeof t!==e&&this.throwWarning([t,"is not a",e]),t)}throwWarning(e){console.warn(["[Pinia ORM]"].concat([`Field ${this.model.$entity()}:${this.key} - `,...e]).join(" "))}}var nt=Object.defineProperty,at=(r,e,t)=>e in r?nt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,q=(r,e,t)=>(at(r,typeof e!="symbol"?e+"":e,t),t);class pe extends T{constructor(e,t={}){var i,s;super(e),q(this,"options"),q(this,"alphabet","useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"),q(this,"size",21),this.options=typeof t=="number"?{size:t}:t,this.alphabet=(i=this.options.alphabet)!=null?i:this.alphabet,this.size=(s=this.options.size)!=null?s:this.size}make(e){const t=this.model.$casts()[this.model.$getKeyName()];return t?e!=null?e:t.withParameters(this.options).newRawInstance(this.model.$fields()).set(e):e!=null?e:He(this.size,this.alphabet)}}var ot=Object.defineProperty,ht=(r,e,t)=>e in r?ot(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,te=(r,e,t)=>(ht(r,typeof e!="symbol"?e+"":e,t),t);class ct{constructor(e){te(this,"schemas",{}),te(this,"model"),this.model=e}one(e,t){e=e||this.model,t=t||this.model;const i=`${e.$self().modelEntity()}${t.$self().modelEntity()}`;if(this.schemas[i])return this.schemas[i];const s=this.newEntity(e,t);this.schemas[i]=s;const n=this.definition(e);return s.define(n),s}many(e,t){return new H.Array(this.one(e,t))}union(e,t){const i=e.reduce((s,n)=>(s[n.$self().modelEntity()]=this.one(n),s),{});return new H.Union(i,t)}newEntity(e,t){const i=e.$self().modelEntity(),s=this.idAttribute(e,t);return new H.Entity(i,{},{idAttribute:s})}idAttribute(e,t){const i=this.getUidPrimaryKeyPairs(e);return(s,n,a)=>{var h,c,l,p;a!==null&&((h=t.$fields()[a])==null||h.attach(n,s));for(const y in i)U(s[y])&&(s[y]=i[y].setKey(y).make(s[y]));return["BelongsTo","HasOne","MorphOne","MorphTo"].includes((l=(c=t.$fields()[a])==null?void 0:c.constructor.name)!=null?l:"")&&u(n[a])&&x(['You are passing a list to "',`${t.$modelEntity()}.${a}`,`" which is a one to one Relation(${(p=t.$fields()[a])==null?void 0:p.constructor.name}):`,JSON.stringify(n[a])]),e.$getIndexId(s)}}getUidPrimaryKeyPairs(e){const t=e.$fields(),i=e.$getKeyName(),s=u(i)?i:[i],n={};return s.forEach(a=>{const o=t[a];o instanceof pe&&(n[a]=o)}),n}definition(e){const t=e.$fields(),i={};for(const s in t){const n=t[s];n instanceof m&&(i[s]=n.define(this))}return i}}var lt=Object.defineProperty,ut=(r,e,t)=>e in r?lt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,dt=(r,e,t)=>(ut(r,typeof e!="symbol"?e+"":e,t),t);class ft{constructor(e){dt(this,"model"),this.model=e}process(e){const t=this.normalize(e);return[e,t]}normalize(e){const t=u(e)?[this.getSchema()]:this.getSchema();return ke(e,t).entities}getSchema(){return new ct(this.model).one()}}function pt(r){return{save(e,t=!0){this.data=Object.assign({},this.data,e),t&&r&&r.newQuery(this.$id).save(Object.values(e))},insert(e,t=!0){this.data=Object.assign({},this.data,e),t&&r&&r.newQuery(this.$id).insert(Object.values(e))},update(e,t=!0){this.data=Object.assign({},this.data,e),t&&r&&r.newQuery(this.$id).update(Object.values(e))},fresh(e,t=!0){this.data=e,t&&r&&r.newQuery(this.$id).fresh(Object.values(e))},destroy(e,t=!0){t&&r?r.newQuery(this.$id).newQuery(this.$id).destroy(e):(e.forEach(i=>delete this.data[i]),this.data.__ob__&&this.data.__ob__.dep.notify())},delete(e,t=!0){t&&r?r.whereId(e).delete():(e.forEach(i=>delete this.data[i]),this.data.__ob__&&this.data.__ob__.dep.notify())},flush(e,t=!0){this.data={},t&&r&&r.newQuery(this.$id).flush()}}}function ye(r,e,t){return Re(r,{state:()=>({data:{}}),actions:pt(t),...e})}var yt=Object.defineProperty,mt=(r,e,t)=>e in r?yt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,S=(r,e,t)=>(mt(r,typeof e!="symbol"?e+"":e,t),t);class me extends m{constructor(e,t,i,s,n,a,o){super(e,t),S(this,"pivot"),S(this,"foreignPivotKey"),S(this,"relatedPivotKey"),S(this,"parentKey"),S(this,"relatedKey"),S(this,"pivotKey","pivot"),this.pivot=i,this.foreignPivotKey=s,this.relatedPivotKey=n,this.parentKey=a,this.relatedKey=o}getRelateds(){return[this.related,this.pivot]}define(e){return e.many(this.related,this.parent)}attach(e,t){var s;const i=(s=t.pivot)!=null?s:{};i[this.foreignPivotKey]=e[this.parentKey],i[this.relatedPivotKey]=t[this.relatedKey],t[`pivot_${this.relatedPivotKey}_${this.pivot.$entity()}`]=i}make(e){return e?e.map(t=>this.related.$newInstance(t)):[]}match(e,t,i){const s=i.get(!1),n=i.newQuery(this.pivot.$modelEntity()).whereIn(this.relatedPivotKey,this.getKeys(s,this.relatedKey)).whereIn(this.foreignPivotKey,this.getKeys(t,this.parentKey)).groupBy(this.foreignPivotKey,this.relatedPivotKey).get();t.forEach(a=>{const o=[];s.forEach(h=>{var p,y;const c=(y=(p=n[`[${a[this.parentKey]},${h[this.relatedKey]}]`])==null?void 0:p[0])!=null?y:null;if(!c)return;const l=h.$newInstance(h.$toJson(),{operation:void 0});l.$setRelation("pivot",c),o.push(l)}),a.$setRelation(e,o)})}addEagerConstraints(e,t){}}var gt=Object.defineProperty,$t=(r,e,t)=>e in r?gt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,g=(r,e,t)=>($t(r,typeof e!="symbol"?e+"":e,t),t);class N{constructor(e,t,i,s,n){g(this,"database"),g(this,"model"),g(this,"wheres",[]),g(this,"orders",[]),g(this,"groups",[]),g(this,"take",null),g(this,"skip",0),g(this,"visible",["*"]),g(this,"hidden",[]),g(this,"cache"),g(this,"eagerLoad",{}),g(this,"pinia"),g(this,"fromCache",!1),g(this,"cacheConfig",{}),g(this,"getNewHydrated",!1),g(this,"hydratedDataCache"),this.database=e,this.model=t,this.pinia=n,this.cache=i,this.hydratedDataCache=s,this.getNewHydrated=!1}newQuery(e){return this.getNewHydrated=!0,new N(this.database,this.database.getModel(e),this.cache,this.hydratedDataCache,this.pinia)}newQueryWithConstraints(e){const t=new N(this.database,this.database.getModel(e),this.cache,this.hydratedDataCache,this.pinia);return t.eagerLoad={...this.eagerLoad},t.wheres=[...this.wheres],t.orders=[...this.orders],t.take=this.take,t.skip=this.skip,t.fromCache=this.fromCache,t.cacheConfig=this.cacheConfig,t}newQueryForRelation(e){return new N(this.database,e.getRelated(),this.cache,new Map,this.pinia)}newInterpreter(){return new ft(this.model)}commit(e,t){const i=ye(this.model.$storeName(),this.model.$piniaOptions(),this)(this.pinia);return e&&typeof i[e]=="function"&&i[e](t,!1),this.cache&&["get","all","insert","flush","delete","update","destroy"].includes(e)&&this.cache.clear(),i.$state.data}withMeta(){return this.makeVisible(["_meta"])}makeVisible(e){return this.visible=e,this.getNewHydrated=!0,this}makeHidden(e){return this.hidden=e,this.getNewHydrated=!0,this}where(e,t){return this.wheres.push({field:e,value:t,boolean:"and"}),this}whereIn(e,t){return t instanceof Set&&(t=Array.from(t)),this.where(e,t)}whereNotIn(e,t){return t instanceof Set&&(t=Array.from(t)),this.where(i=>!t.includes(i[e]))}orWhereIn(e,t){return t instanceof Set&&(t=Array.from(t)),this.orWhere(e,t)}orWhereNotIn(e,t){return t instanceof Set&&(t=Array.from(t)),this.orWhere(i=>!t.includes(i[e]))}whereId(e){return this.where(this.model.$getKeyName(),e)}orWhere(e,t){return this.wheres.push({field:e,value:t,boolean:"or"}),this}whereNull(e){return this.where(e,null)}whereNotNull(e){return this.where(t=>t[e]!=null)}whereHas(e,t=()=>{},i,s){return this.where(this.getFieldWhereForRelations(e,t,i,s))}orWhereHas(e,t=()=>{},i,s){return this.orWhere(this.getFieldWhereForRelations(e,t,i,s))}has(e,t,i){return this.where(this.getFieldWhereForRelations(e,()=>{},t,i))}orHas(e,t,i){return this.orWhere(this.getFieldWhereForRelations(e,()=>{},t,i))}doesntHave(e){return this.where(this.getFieldWhereForRelations(e,()=>{},"=",0))}orDoesntHave(e){return this.orWhere(this.getFieldWhereForRelations(e,()=>{},"=",0))}whereDoesntHave(e,t=()=>{}){return this.where(this.getFieldWhereForRelations(e,t,"=",0))}orWhereDoesntHave(e,t=()=>{}){return this.orWhere(this.getFieldWhereForRelations(e,t,"=",0))}groupBy(...e){return e.forEach(t=>{this.groups.push({field:t})}),this}orderBy(e,t="asc"){return this.orders.push({field:e,direction:t}),this}limit(e){return this.take=e,this}offset(e){return this.skip=e,this}with(e,t=()=>{}){return this.getNewHydrated=!0,this.eagerLoad[e]=t,this}withAll(e=()=>{}){let t=this.model.$fields();Object.values(this.model.$types()).forEach(s=>{t={...t,...s.fields()}});for(const s in t)t[s]instanceof m&&this.with(s,e);return this}withAllRecursive(e=3){return this.withAll(t=>{e>0&&t.withAllRecursive(e-1)})}useCache(e,t){return this.fromCache=!0,this.cacheConfig={key:e,params:t},this}getFieldWhereForRelations(e,t=()=>{},i,s){const n=this.newQuery(this.model.$entity()).with(e,t).get(!1).filter(a=>{const o=a[e];return Ce(u(o)?o.length:o===null?0:1,typeof i=="number"?i:s!=null?s:1,typeof i=="number"||s===void 0?">=":i)}).map(a=>a.$getIndexId());return a=>n.includes(a.$getIndexId())}storeFind(e=[]){const t=this.commit("all"),i=[],s=new Set(e);return s.size>0?s.forEach(n=>{t[n]&&i.push(this.hydrate(t[n],{visible:this.visible,hidden:this.hidden,operation:"get"}))}):Object.values(t).forEach(n=>i.push(this.hydrate(n,{visible:this.visible,hidden:this.hidden,operation:"get"}))),i}all(){return this.storeFind()}get(e=!0){if(!this.fromCache||!this.cache)return this.internalGet(e);const t=this.cacheConfig.key?this.cacheConfig.key+JSON.stringify(this.cacheConfig.params):We(this.model.$entity(),{where:this.wheres,groups:this.groups,orders:this.orders,eagerLoads:this.eagerLoad,skip:this.skip,take:this.take,hidden:this.hidden,visible:this.visible}),i=this.cache.get(t);if(i)return i;const s=this.internalGet(e);return this.cache.set(t,s),s}internalGet(e){var i;if(this.model.$entity()!==this.model.$baseEntity()||this.model.$namespace()!==this.model.$baseNamespace()){const s=(i=this.model.$fields()[this.model.$typeKey()].make())!=null?i:this.model.$entity();this.where(this.model.$typeKey(),s)}let t=this.select();return this.orders.length===0&&(t=this.filterLimit(t)),E(t)||this.eagerLoadRelations(t),this.orders.length>0&&(t=this.filterOrder(t),t=this.filterLimit(t)),e&&t.forEach(s=>s.$self().retrieved(s)),this.groups.length>0?this.filterGroup(t):t}first(){var e;return(e=this.limit(1).get()[0])!=null?e:null}find(e){return this.whereId(e)[u(e)?"get":"first"]()}select(){let e=[];const t=this.wheres,i=this.wheres.findIndex(n=>n.field===this.model.$getKeyName());if(i>-1){const n=this.wheres[i].value;e=((z(n)?[]:u(n)?n:[n])||[]).map(String)||[],e.length>0&&(this.wheres=[...this.wheres.slice(0,i),...this.wheres.slice(i+1)])}let s=this.storeFind(e);return s=this.filterWhere(s),this.wheres=t,s}filterWhere(e){if(E(this.wheres))return e;const t=this.getWhereComparator();return e.filter(i=>t(i))}getWhereComparator(){const{and:e,or:t}=ze(this.wheres,i=>i.boolean);return i=>{const s=[];return e&&s.push(e.every(n=>this.whereComparator(i,n))),t&&s.push(t.some(n=>this.whereComparator(i,n))),s.includes(!0)}}whereComparator(e,t){return z(t.field)?t.field(e):u(t.value)?t.value.includes(e[t.field]):z(t.value)?t.value(e[t.field]):e[t.field]===t.value}filterOrder(e){const t=this.orders.map(s=>s.field),i=this.orders.map(s=>s.direction);return Te(e,t,i)}filterGroup(e){const t={},i=this.groups.map(s=>s.field);return e.forEach(s=>{const n=i.length===1?s[i[0]]:`[${i.map(a=>s[a]).toString()}]`;t[n]=(t[n]||[]).concat(s)}),t}filterLimit(e){return this.take!==null?e.slice(this.skip,this.skip+this.take):e.slice(this.skip)}load(e){this.eagerLoadRelations(e)}eagerLoadRelations(e){for(const t in this.eagerLoad)this.eagerLoadRelation(e,t,this.eagerLoad[t])}eagerLoadRelation(e,t,i){const s=this.getRelation(t),n=this.newQueryForRelation(s);s.addEagerConstraints(n,e),i(n),s.match(t,e,n)}getRelation(e){return this.model.$getRelation(e)}revive(e){return u(e)?this.reviveMany(e):this.reviveOne(e)}reviveOne(e){var n;this.getNewHydrated=!1;const t=this.model.$getIndexId(e),i=(n=this.commit("get")[t])!=null?n:null;if(!i)return null;const s=this.hydrate(i,{visible:this.visible,hidden:this.hidden,operation:"get"});return this.reviveRelations(s,e),s}reviveMany(e){return e.reduce((t,i)=>{const s=this.reviveOne(i);return s&&t.push(s),t},[])}reviveRelations(e,t){const i=this.model.$fields();for(const s in t){const n=i[s];if(!(n instanceof m))continue;const a=t[s];if(!a)return;if(n instanceof J){const o=e[n.getType()];e[s]=this.newQuery(o).reviveOne(a);continue}e[s]=u(a)?this.newQueryForRelation(n).reviveMany(a):this.newQueryForRelation(n).reviveOne(a)}}new(e=!0){let t=this.hydrate({},{operation:e?"set":"get"});const i=t.$self().creating(t),s=t.$self().saving(t);return i===!1||s===!1?null:(t.$isDirty()&&(t=this.hydrate(t.$getAttributes(),{operation:e?"set":"get"})),e&&(this.hydratedDataCache.set(this.model.$entity()+t.$getKey(void 0,!0),this.hydrate(t.$getAttributes(),{operation:"get"})),t.$self().created(t),t.$self().saved(t),this.commit("insert",this.compile(t))),t)}save(e){let t=this.newInterpreter().process(e);const i=this.model.$types(),s=this.model.$baseEntity()!==this.model.$entity()||this.model.$baseNamespace()!==this.model.$namespace();if(Object.values(i).length>0||s){const o=Object.keys(i),h={};e=u(e)?e:[e],e.forEach(c=>{var p;const l=o.includes(`${c[this.model.$typeKey()]}`)||s?(p=c[this.model.$typeKey()])!=null?p:this.model.$fields()[this.model.$typeKey()].defaultValue:o[0];h[l]||(h[l]=[]),h[l].push(c)});for(const c in h){const l=i[c];l.modelEntity()===this.model.$modelEntity()?t=this.newInterpreter().process(h[c]):this.newQueryWithConstraints(l.modelEntity()).save(h[c])}}const[n,a]=t;for(const o in a){const h=this.newQuery(o),c=a[o];h.saveElements(c)}return this.revive(n)}saveElements(e){const t={},i=this.commit("all"),s=[];for(const n in e){const a=e[n],o=i[n];let h=o?Object.assign(this.hydrate(o,{operation:"set",action:"update"}),a):this.hydrate(a,{operation:"set",action:"save"});const c=h.$self().saving(h,a),l=o?h.$self().updating(h,a):h.$self().creating(h,a);c===!1||l===!1||(h.$isDirty()&&(h=this.hydrate(h.$getAttributes(),{operation:"set",action:"update"})),s.push(()=>h.$self().saved(h,a)),s.push(()=>o?h.$self().updated(h,a):h.$self().created(h,a)),t[n]=h.$getAttributes(),Object.values(h.$types()).length>0&&!t[n][h.$typeKey()]&&(t[n][h.$typeKey()]=a[h.$typeKey()]))}Object.keys(t).length>0&&(this.commit("save",t),s.forEach(n=>n()))}insert(e){const t=this.hydrate(e,{operation:"set",action:"insert"});return this.commit("insert",this.compile(t)),t}fresh(e){this.hydratedDataCache.clear();const t=this.hydrate(e,{action:"update"});return this.commit("fresh",this.compile(t)),t}update(e){const t=this.get(!1);if(E(t))return[];const i=t.map(s=>{const n=Object.assign(this.hydrate(s.$getAttributes(),{action:"update",operation:"set"}),e);if(s.$self().updating(n,e)===!1)return s;const a=n.$isDirty()?this.hydrate({...s.$getAttributes(),...e},{action:"update",operation:"set"}):n;return a.$self().updated(a,e),a});return this.commit("update",this.compile(i)),i}destroy(e){return u(e)?this.destroyMany(e):this.destroyOne(e)}destroyOne(e){const t=this.find(e);if(!t)return null;const[i,s]=this.dispatchDeleteHooks(t);return s.includes(t.$getIndexId())||(this.commit("destroy",[t.$getIndexId()]),i.forEach(n=>n())),t}destroyMany(e){const t=this.find(e);if(E(t))return[];const[i,s]=this.dispatchDeleteHooks(t),n=this.getIndexIdsFromCollection(t).filter(a=>!s.includes(a));return this.commit("destroy",n),i.forEach(a=>a()),t}delete(){const e=this.get(!1);if(E(e))return[];const[t,i]=this.dispatchDeleteHooks(e),s=this.getIndexIdsFromCollection(e).filter(n=>!i.includes(n));return this.commit("delete",s),t.forEach(n=>n()),e}flush(){return this.commit("flush"),this.hydratedDataCache.clear(),this.get(!1)}checkAndDeleteRelations(e){const t=e.$fields();for(const i in t){const s=t[i];if(t[i]instanceof m&&s.onDeleteMode&&e[i]){const a=(u(e[i])?e[i]:[e[i]]).map(h=>h.$getKey(void 0,!0)),o={};if(s instanceof me){this.newQuery(s.pivot.$entity()).where(s.foreignPivotKey,e[e.$getLocalKey()]).delete();continue}switch(s.onDeleteMode){case"cascade":{this.newQueryForRelation(s).destroy(a);break}case"set null":{s.foreignKey&&(o[s.foreignKey]=null),s.morphId&&(o[s.morphId]=null,o[s.morphType]=null),this.newQueryForRelation(s).whereId(a).update(o);break}}}}}dispatchDeleteHooks(e){const t=[],i=[];return e=u(e)?e:[e],this.withAll().load(e),e.forEach(s=>{s.$self().deleting(s)===!1?i.push(s.$getIndexId()):(this.hydratedDataCache.delete("set"+this.model.$entity()+s.$getIndexId()),this.hydratedDataCache.delete("get"+this.model.$entity()+s.$getIndexId()),t.push(()=>s.$self().deleted(s)),this.checkAndDeleteRelations(s))}),[t,i]}getIndexIdsFromCollection(e){return e.map(t=>t.$getIndexId())}hydrate(e,t){return u(e)?e.map(i=>this.hydrate(i,t)):this.getHydratedModel(e,{relations:!1,...t||{}})}compile(e){return(u(e)?e:[e]).reduce((i,s)=>(i[s.$getIndexId()]=s.$getAttributes(),i),{})}getHydratedModel(e,t){const i=this.model.$entity()+this.model.$getKey(e,!0),s=(t==null?void 0:t.operation)+i;let n=this.hydratedDataCache.get(s);if((t==null?void 0:t.action)==="update"&&(this.hydratedDataCache.delete("get"+i),n=void 0),!this.getNewHydrated&&n)return n;const a=this.model.$types()[e[this.model.$typeKey()]],h=(c=>(a?a.newRawInstance():this.model).$newInstance(e,{relations:!1,...t||{},...c}))();return E(this.eagerLoad)&&(t==null?void 0:t.operation)!=="set"&&this.hydratedDataCache.set(s,h),h}}var wt=Object.defineProperty,bt=(r,e,t)=>e in r?wt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,_t=(r,e,t)=>(bt(r,typeof e!="symbol"?e+"":e,t),t),vt=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)},w=(r,e,t)=>(vt(r,e,"read from private field"),t?t.call(r):e.get(r)),It=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},ie,$;class ge{constructor(){_t(this,ie),It(this,$,new Map)}has(e){var t;return!!(w(this,$).has(e)&&((t=w(this,$).get(e))==null?void 0:t.deref()))}get(e){const t=w(this,$).get(e);if(!t)return;const i=t.deref();if(i)return i;w(this,$).delete(e)}set(e,t){return w(this,$).set(e,new WeakRef(t)),this}get size(){return w(this,$).size}clear(){w(this,$).clear()}delete(e){return w(this,$).delete(e),!1}forEach(e){for(const[t,i]of this)e(i,t,this)}*[(ie=Symbol.toStringTag,Symbol.iterator)](){for(const[e,t]of w(this,$)){const i=t.deref();if(!i){w(this,$).delete(e);continue}yield[e,i]}}*entries(){for(const[e,t]of this)yield[e,t]}*keys(){for(const[e]of this)yield e}*values(){for(const[,e]of this)yield e}}$=new WeakMap;const Rt=new ge,Kt=new Map,Et={model:{namespace:"",withMeta:!1,hidden:["_meta"],visible:["*"]},cache:{shared:!0,provider:ge}},M={...Et};var St=Object.defineProperty,Mt=(r,e,t)=>e in r?St(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,_=(r,e,t)=>(Mt(r,typeof e!="symbol"?e+"":e,t),t);class Y{constructor(e,t){return _(this,"database"),_(this,"model"),_(this,"pinia"),_(this,"queryCache"),_(this,"hydratedDataCache"),_(this,"use"),_(this,"config"),this.config=M,this.database=e,this.pinia=t,this.hydratedDataCache=Kt,new Proxy(this,{get(i,s){if(typeof s!="symbol"){if(s in i)return i[s];if(!(s==="use"||s==="model"||s==="queryCache"))return function(...n){return i.query()[s](...n)}}}})}static setModel(e){return this.useModel=e,this}setConfig(e){this.config=e}initialize(e){var t;return this.config.cache&&this.config.cache!==!0&&(this.queryCache=this.config.cache.shared?Rt:new this.config.cache.provider),e?(this.model=e.newRawInstance(),this):this.use||this.$self().useModel?(this.use=(t=this.use)!=null?t:this.$self().useModel,this.model=this.use.newRawInstance(),this):this}$self(){return this.constructor}getModel(){return C(!!this.model,["The model is not registered. Please define the model to be used at","`use` property of the repository class."]),this.model}piniaStore(){return ye(this.model.$storeName(),this.model.$piniaOptions(),this.query())(this.pinia)}repo(e){return At(e)}query(){return new N(this.database,this.getModel(),this.queryCache,this.hydratedDataCache,this.pinia)}cache(){return this.queryCache}where(e,t){return this.query().where(e,t)}orWhere(e,t){return this.query().orWhere(e,t)}whereHas(e,t=()=>{},i,s){return this.query().whereHas(e,t,i,s)}orWhereHas(e,t=()=>{},i,s){return this.query().orWhereHas(e,t,i,s)}has(e,t,i){return this.query().has(e,t,i)}orHas(e,t,i){return this.query().orHas(e,t,i)}doesntHave(e){return this.query().doesntHave(e)}orDoesntHave(e){return this.query().orDoesntHave(e)}whereDoesntHave(e,t=()=>{}){return this.query().whereDoesntHave(e,t)}orWhereDoesntHave(e,t=()=>{}){return this.query().orWhereDoesntHave(e,t)}withMeta(){return this.query().withMeta()}makeVisible(e){return this.query().makeVisible(e)}makeHidden(e){return this.query().makeHidden(e)}groupBy(...e){return this.query().groupBy(...e)}orderBy(e,t){return this.query().orderBy(e,t)}limit(e){return this.query().limit(e)}offset(e){return this.query().offset(e)}with(e,t){return this.query().with(e,t)}withAll(e){return this.query().withAll(e)}withAllRecursive(e){return this.query().withAllRecursive(e)}useCache(e,t){return this.query().useCache(e,t)}all(){return this.query().get()}revive(e){return this.query().revive(e)}make(e){return u(e)?e.map(t=>this.getModel().$newInstance(t,{relations:!0})):this.getModel().$newInstance(e,{relations:!0})}save(e){return this.query().save(e)}new(e=!0){return this.query().new(e)}insert(e){return this.query().insert(e)}fresh(e){return this.query().fresh(e)}destroy(e){return this.query().destroy(e)}flush(){return this.query().flush()}}_(Y,"_isRepository",!0);_(Y,"useModel");var Dt=Object.defineProperty,Ot=(r,e,t)=>e in r?Dt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Pt=(r,e,t)=>(Ot(r,typeof e!="symbol"?e+"":e,t),t);class Ct{constructor(){Pt(this,"models",{})}register(e){const t=e.$self().modelEntity();this.models[t]||(this.models[t]=e,this.registerRelatedModels(e))}registerRelatedModels(e){const t=e.$fields();for(const i in t){const s=t[i];s instanceof m&&s.getRelateds().forEach(n=>{this.register(n)})}}getModel(e){return this.models[e]}}const Nt=[];function Tt(r){let e=M;return Nt.forEach(t=>{const i=t({config:e,repository:r,model:r.getModel()});e={...e,...i.config}}),r.setConfig(e),r}function At(r,e){const t=new Ct,i=r._isRepository?new r(t,e).initialize():new Y(t,e).initialize(r);try{const s=Object.values(i.getModel().$types());s.length>0?s.forEach(n=>i.database.register(n.newRawInstance())):i.database.register(i.getModel())}catch(s){console.error("[Pinia ORM] Failed to register models",s)}return Tt(i)}class xt extends T{make(e){return e===void 0?this.defaultValue:e}}let Ft=class extends T{constructor(e,t){super(e,t)}make(e){return this.makeReturn("string",e)}};class zt extends T{constructor(e,t){super(e,t)}make(e){return this.makeReturn("number",e)}}class Ht extends T{constructor(e,t){super(e,t)}make(e){return this.makeReturn("boolean",e)}}var Wt=Object.defineProperty,qt=(r,e,t)=>e in r?Wt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,se=(r,e,t)=>(qt(r,typeof e!="symbol"?e+"":e,t),t);class re extends m{constructor(e,t,i,s){super(e,t),se(this,"foreignKey"),se(this,"localKey"),this.foreignKey=i,this.localKey=s}getRelateds(){return[this.related]}define(e){return e.one(this.related,this.parent)}attach(e,t){this.compositeKeyMapper(this.foreignKey,this.localKey,(i,s)=>{t[i]=e[s]})}addEagerConstraints(e,t){this.compositeKeyMapper(this.foreignKey,this.localKey,(i,s)=>e.whereIn(i,this.getKeys(t,s)))}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=n[this.getKey(this.localKey)];s[a]?n.$setRelation(e,s[a][0]):n.$setRelation(e,null)})}buildDictionary(e){return this.mapToDictionary(e,t=>[t[this.getKey(this.foreignKey)],t])}make(e){return e?this.related.$newInstance(e):null}}var Lt=Object.defineProperty,Bt=(r,e,t)=>e in r?Lt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,L=(r,e,t)=>(Bt(r,typeof e!="symbol"?e+"":e,t),t);class Qt extends m{constructor(e,t,i,s){super(e,t),L(this,"child"),L(this,"foreignKey"),L(this,"ownerKey"),this.foreignKey=i,this.ownerKey=s,this.child=t}getRelateds(){return[this.child]}define(e){return e.one(this.child,this.parent)}attach(e,t){this.compositeKeyMapper(this.foreignKey,this.ownerKey,(i,s)=>{e[i]=t[s]})}addEagerConstraints(e,t){this.compositeKeyMapper(this.foreignKey,this.ownerKey,(i,s)=>e.whereIn(s,this.getEagerModelKeys(t,i)))}getEagerModelKeys(e,t){return e.reduce((i,s)=>(s[t]!==null&&i.push(s[t]),i),[])}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=n[this.getKey(this.foreignKey)];s[a]?n.$setRelation(e,s[a]):n.$setRelation(e,null)})}buildDictionary(e){return e.reduce((t,i)=>(t[i[this.getKey(this.ownerKey)]]=i,t),{})}make(e){return e?this.child.$newInstance(e):null}}var jt=Object.defineProperty,Ut=(r,e,t)=>e in r?jt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,ne=(r,e,t)=>(Ut(r,typeof e!="symbol"?e+"":e,t),t);class Vt extends m{constructor(e,t,i,s){super(e,t),ne(this,"foreignKey"),ne(this,"localKey"),this.foreignKey=i,this.localKey=s}getRelateds(){return[this.related]}define(e){return e.many(this.related,this.parent)}attach(e,t){this.compositeKeyMapper(this.foreignKey,this.localKey,(i,s)=>{t[i]=e[s]})}addEagerConstraints(e,t){this.compositeKeyMapper(this.foreignKey,this.localKey,(i,s)=>e.whereIn(i,this.getKeys(t,s)))}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=this.getKey(u(this.localKey)?this.localKey.map(o=>n[o]):n[this.localKey]);s[a]?n.$setRelation(e,s[a]):n.$setRelation(e,[])})}buildDictionary(e){return this.mapToDictionary(e,t=>[this.getKey(u(this.foreignKey)?this.foreignKey.map(s=>t[s]):t[this.foreignKey]),t])}make(e){return e?e.map(t=>this.related.$newInstance(t)):[]}}var kt=Object.defineProperty,Jt=(r,e,t)=>e in r?kt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,B=(r,e,t)=>(Jt(r,typeof e!="symbol"?e+"":e,t),t);class Gt extends m{constructor(e,t,i,s){super(e,t),B(this,"child"),B(this,"foreignKey"),B(this,"ownerKey"),this.foreignKey=i,this.ownerKey=s,this.child=t}getRelateds(){return[this.child]}define(e){return e.many(this.child,this.parent)}attach(e,t){t[this.ownerKey]!==void 0&&(e[this.foreignKey]||(e[this.foreignKey]=[]),this.attachIfMissing(e[this.foreignKey],t[this.ownerKey]))}attachIfMissing(e,t){e.includes(t)||e.push(t)}addEagerConstraints(e,t){e.whereIn(this.ownerKey,this.getEagerModelKeys(t))}getEagerModelKeys(e){return e.reduce((t,i)=>[...t,...i[this.foreignKey]],[])}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=this.getRelatedModels(s,n[this.foreignKey]);n.$setRelation(e,a)})}buildDictionary(e){return e.reduce((t,i)=>(t[i[this.ownerKey]]=i,t),{})}getRelatedModels(e,t){return t.reduce((i,s)=>{const n=e[s];return n&&i.push(n),i},[])}make(e){return e?e.map(t=>this.child.$newInstance(t)):[]}}var Yt=Object.defineProperty,Xt=(r,e,t)=>e in r?Yt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Q=(r,e,t)=>(Xt(r,typeof e!="symbol"?e+"":e,t),t);class ae extends m{constructor(e,t,i,s,n){super(e,t),Q(this,"morphId"),Q(this,"morphType"),Q(this,"localKey"),this.morphId=i,this.morphType=s,this.localKey=n}getRelateds(){return[this.related]}define(e){return e.one(this.related,this.parent)}attach(e,t){t[this.morphId]=e[this.localKey],t[this.morphType]=this.parent.$entity()}addEagerConstraints(e,t){e.where(this.morphType,this.parent.$entity()).whereIn(this.morphId,this.getKeys(t,this.localKey))}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=n[this.localKey];s[a]?n.$setRelation(e,s[a]):n.$setRelation(e,null)})}buildDictionary(e){return e.reduce((t,i)=>(t[i[this.morphId]]=i,t),{})}make(e){return e?this.related.$newInstance(e):null}}var Zt=Object.defineProperty,ei=(r,e,t)=>e in r?Zt(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,j=(r,e,t)=>(ei(r,typeof e!="symbol"?e+"":e,t),t);class ti extends m{constructor(e,t,i,s,n){super(e,t),j(this,"morphId"),j(this,"morphType"),j(this,"localKey"),this.morphId=i,this.morphType=s,this.localKey=n}getRelateds(){return[this.related]}define(e){return e.many(this.related,this.parent)}attach(e,t){t[this.morphId]=e[this.localKey],t[this.morphType]=this.parent.$entity()}addEagerConstraints(e,t){e.where(this.morphType,this.parent.$entity()),e.whereIn(this.morphId,this.getKeys(t,this.localKey))}match(e,t,i){const s=this.buildDictionary(i.get(!1));t.forEach(n=>{const a=n[this.localKey];s[a]?n.$setRelation(e,s[a]):n.$setRelation(e,[])})}buildDictionary(e){return this.mapToDictionary(e,t=>[t[this.morphId],t])}make(e){return e?e.map(t=>this.related.$newInstance(t)):[]}}var ii=Object.defineProperty,si=(r,e,t)=>e in r?ii(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,P=(r,e,t)=>(si(r,typeof e!="symbol"?e+"":e,t),t);class ri extends m{constructor(e,t,i,s,n,a,o){super(e,t),P(this,"through"),P(this,"firstKey"),P(this,"secondKey"),P(this,"localKey"),P(this,"secondLocalKey"),this.through=i,this.firstKey=s,this.secondKey=n,this.localKey=a,this.secondLocalKey=o}getRelateds(){return[this.related,this.through]}define(e){return e.many(this.related,this.parent)}attach(e,t){}addEagerConstraints(e,t){}match(e,t,i){const s=i.newQuery(this.through.$entity()).where(this.firstKey,this.getKeys(t,this.localKey)).get(!1),n=i.where(this.secondKey,this.getKeys(s,this.secondLocalKey)).groupBy(this.secondKey).get(!1),a=this.buildDictionary(s,n);t.forEach(o=>{const h=o[this.localKey];a[h]?o.$setRelation(e,a[h][0]):o.$setRelation(e,[])})}buildDictionary(e,t){return this.mapToDictionary(e,i=>[i[this.firstKey],t[i[this.secondLocalKey]]])}make(e){return e?e.map(t=>this.related.$newInstance(t)):[]}}var ni=Object.defineProperty,ai=(r,e,t)=>e in r?ni(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,R=(r,e,t)=>(ai(r,typeof e!="symbol"?e+"":e,t),t);class oi extends m{constructor(e,t,i,s,n,a,o,h){super(e,t),R(this,"pivot"),R(this,"morphId"),R(this,"morphType"),R(this,"relatedId"),R(this,"parentKey"),R(this,"relatedKey"),R(this,"pivotKey","pivot"),this.pivot=i,this.morphId=n,this.morphType=a,this.relatedId=s,this.parentKey=o,this.relatedKey=h}getRelateds(){return[this.related,this.pivot]}define(e){return e.many(this.related,this.parent)}attach(e,t){var s;const i=(s=t.pivot)!=null?s:{};i[this.morphId]=e[this.parentKey],i[this.morphType]=this.parent.$entity(),i[this.relatedId]=t[this.relatedKey],t[`pivot_${this.relatedId}_${this.pivot.$entity()}`]=i}make(e){return e?e.map(t=>this.related.$newInstance(t)):[]}match(e,t,i){const s=i.get(!1),n=i.newQuery(this.pivot.$modelEntity()).whereIn(this.relatedId,this.getKeys(s,this.relatedKey)).whereIn(this.morphId,this.getKeys(t,this.parentKey)).groupBy(this.morphId,this.relatedId,this.morphType).get();t.forEach(a=>{const o=[];s.forEach(h=>{var p,y;const c=(y=(p=n[`[${a[this.parentKey]},${h[this.relatedKey]},${this.parent.$entity()}]`])==null?void 0:p[0])!=null?y:null,l=h.$newInstance(h.$toJson(),{operation:void 0});l.$setRelation("pivot",c),c&&o.push(l)}),a.$setRelation(e,o)})}addEagerConstraints(e,t){}}var hi=Object.defineProperty,ci=(r,e,t)=>e in r?hi(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,d=(r,e,t)=>(ci(r,typeof e!="symbol"?e+"":e,t),t);class f{constructor(e,t={operation:"set"}){var s;d(this,"pivot"),this.$boot(),((s=t.fill)!=null?s:!0)&&this.$fill(e,t)}static fields(){return{}}static usedNamespace(){var e;return(e=this.namespace)!=null?e:M.model.namespace}static modelEntity(){return(this.usedNamespace()?this.usedNamespace()+"/":"")+this.entity}static initializeSchema(){var i;const e=this.modelEntity();this.schemas[e]={},this.fieldsOnDelete[e]=(i=this.fieldsOnDelete[e])!=null?i:{};const t={...this.fields(),...this.registries[e]};for(const s in t){const n=t[s];this.schemas[e][s]=typeof n=="function"?n():n,this.fieldsOnDelete[e][s]&&(this.schemas[e][s]=this.schemas[e][s].onDelete(this.fieldsOnDelete[e][s]))}}static setRegistry(e,t){return this.registries[this.modelEntity()]||(this.registries[this.modelEntity()]={}),this.registries[this.modelEntity()][e]=t,this}static setFieldDeleteMode(e,t){var i;return this.fieldsOnDelete[this.modelEntity()]=(i=this.fieldsOnDelete[this.modelEntity()])!=null?i:{},this.fieldsOnDelete[this.modelEntity()][e]=t,this}static setMutator(e,t){return this.fieldMutators[e]=t,this}static setCast(e,t){return this.fieldCasts[e]=t,this}static setHidden(e){return this.hidden.push(e),this}static clearBootedModels(){this.booted={},this.original={},this.schemas={},this.fieldMutators={},this.fieldCasts={},this.hidden=[],this.visible=[]}static clearRegistries(){this.registries={}}static newRawInstance(){return new this(void 0,{fill:!1})}static attr(e){return new xt(this.newRawInstance(),e)}static string(e){return new Ft(this.newRawInstance(),e)}static number(e){return new zt(this.newRawInstance(),e)}static boolean(e){return new Ht(this.newRawInstance(),e)}static uid(e){return new pe(this.newRawInstance(),e)}static hasOne(e,t,i){const s=this.newRawInstance();return i=i!=null?i:s.$getKeyName(),new re(s,e.newRawInstance(),t,i)}static belongsTo(e,t,i){const s=e.newRawInstance();return i=i!=null?i:s.$getKeyName(),new Qt(this.newRawInstance(),s,t,i)}static belongsToMany(e,t,i,s,n,a){const o=e.newRawInstance(),h=this.newRawInstance(),c=t.newRawInstance();return n=n!=null?n:h.$getLocalKey(),a=a!=null?a:o.$getLocalKey(),this.schemas[e.modelEntity()][`pivot_${s}_${c.$entity()}`]=new re(o,c,s,a),new me(h,o,c,i,s,n,a)}static morphToMany(e,t,i,s,n,a,o){const h=e.newRawInstance(),c=this.newRawInstance(),l=t.newRawInstance();return a=a!=null?a:c.$getLocalKey(),o=o!=null?o:h.$getLocalKey(),this.schemas[e.modelEntity()][`pivot_${i}_${l.$entity()}`]=new ae(h,l,i,c.$entity(),o),new oi(c,h,l,i,s,n,a,o)}static hasMany(e,t,i){const s=this.newRawInstance();return i=i!=null?i:s.$getKeyName(),new Vt(s,e.newRawInstance(),t,i)}static hasManyBy(e,t,i){const s=e.newRawInstance();return i=i!=null?i:s.$getLocalKey(),new Gt(this.newRawInstance(),s,t,i)}static hasManyThrough(e,t,i,s,n,a){const o=this.newRawInstance(),h=t.newRawInstance();return n=n!=null?n:o.$getLocalKey(),a=a!=null?a:h.$getLocalKey(),new ri(o,e.newRawInstance(),h,i,s,n,a)}static morphOne(e,t,i,s){const n=this.newRawInstance();return s=s!=null?s:n.$getLocalKey(),new ae(n,e.newRawInstance(),t,i,s)}static morphTo(e,t,i,s=""){const n=this.newRawInstance(),a=e.map(o=>o.newRawInstance());return new J(n,a,t,i,s)}static morphMany(e,t,i,s){const n=this.newRawInstance();return s=s!=null?s:n.$getLocalKey(),new ti(n,e.newRawInstance(),t,i,s)}static mutators(){return{}}static casts(){return{}}static types(){return{}}$self(){return this.constructor}$entity(){return this.$self().entity}$config(){return this.$self().config}$namespace(){return this.$self().usedNamespace()}$storeName(){return(this.$namespace()?this.$namespace()+"/":"")+this.$baseEntity()}$baseEntity(){var e;return(e=this.$self().baseEntity)!=null?e:this.$entity()}$baseNamespace(){var e;return(e=this.$self().baseNamespace)!=null?e:this.$namespace()}$modelEntity(){return this.$self().modelEntity()}$typeKey(){return this.$self().typeKey}$types(){return this.$self().types()}$piniaOptions(){return this.$self().piniaOptions}$primaryKey(){return this.$self().primaryKey}$fields(){return this.$self().schemas[this.$modelEntity()]}$hidden(){return this.$self().hidden}$visible(){return this.$self().visible}$newInstance(e,t){const i=this.$self();return new i(e,t)}$boot(){this.$self().booted[this.$modelEntity()]||(this.$self().booted[this.$modelEntity()]=!0,this.$initializeSchema())}$initializeSchema(){this.$self().initializeSchema()}$casts(){return{...this.$getCasts(),...this.$self().fieldCasts}}$fill(e={},t={}){var h,c,l,p;const i=(h=t.operation)!=null?h:"get",s={...M.model,...this.$config()};s.withMeta&&(this.$self().schemas[this.$entity()][this.$self().metaKey]=this.$self().attr({}));const n=this.$fields(),a=(c=t.relations)!=null?c:!0,o={...this.$getMutators(),...this.$self().fieldMutators};for(const y in n){if(i==="get"&&!this.isFieldVisible(y,this.$hidden(),this.$visible(),t))continue;const X=n[y];let I=e[y];if(X instanceof m&&!a)continue;const b=o==null?void 0:o[y],D=(l=this.$casts()[y])==null?void 0:l.newRawInstance(n);b&&i==="get"&&(I=typeof b=="function"?b(I):typeof b.get=="function"?b.get(I):I),D&&i==="get"&&(I=D.get(I));let K=this.$fillField(y,X,I);b&&typeof b!="function"&&i==="set"&&b.set&&(K=b.set(K)),D&&i==="set"&&(K=t.action==="update"?D.get(K):D.set(K)),this[y]=(p=this[y])!=null?p:K}return i==="set"&&(this.$self().original[this.$getKey(this,!0)]=this.$getAttributes()),s.withMeta&&i==="set"&&this.$fillMeta(t.action),this}$fillMeta(e="save"){const t=Math.floor(Date.now()/1e3);e==="save"&&(this[this.$self().metaKey]={createdAt:t,updatedAt:t}),e==="update"&&(this[this.$self().metaKey].updatedAt=t)}$fillField(e,t,i){if(i!==void 0)return t instanceof J?t.setKey(e).make(i,this[t.getType()]):t.setKey(e).make(i);if(this[e]===void 0)return t.setKey(e).make()}isFieldVisible(e,t,i,s){var c,l;const n=t.length>0?t:M.model.hidden,a=[...i.length>0?i:M.model.visible,String(this.$primaryKey())],o=(c=s.visible)!=null?c:[],h=(l=s.hidden)!=null?l:[];return(n.includes("*")||n.includes(e))&&!o.includes(e)||h.includes(e)?!1:(a.includes("*")||a.includes(e))&&!h.includes(e)||o.includes(e)}$getKeyName(){return this.$primaryKey()}$getKey(e,t=!1){if(e=e!=null?e:this,this.$hasCompositeKey()){const s=this.$getCompositeKey(e);return t?"["+(s==null?void 0:s.join(","))+"]":s}const i=e[this.$getKeyName()];return U(i)?null:i}$hasCompositeKey(){return u(this.$getKeyName())}$getCompositeKey(e){let t=[];return this.$getKeyName().every(i=>{const s=e[i];return U(s)?(t=null,!1):(t.push(s),!0)}),t===null?null:t}$getIndexId(e){const t=e!=null?e:this,i=this.$getKey(t);return C(i!==null,["The record is missing the primary key. If you want to persist record","without the primary key, please define the primary key field with the","`uid` attribute."]),this.$stringifyId(i)}$stringifyId(e){return u(e)?JSON.stringify(e):String(e)}$getLocalKey(){return C(!this.$hasCompositeKey(),["Please provide the local key for the relationship. The model with the","composite key can't infer its local key."]),this.$getKeyName()}$getRelation(e){let t=this.$fields()[e];return Object.values(this.$types()).forEach(s=>{t===void 0&&(t=s.fields()[e])}),C(t instanceof m,[`Relationship [${e}] on model [${this.$entity()}] not found.`]),t}$setRelation(e,t){return e.includes("pivot")?(this.pivot=t,this):(this.$fields()[e]&&(this[e]=t),this)}$getMutators(){return this.$self().mutators()}$getCasts(){return this.$self().casts()}$getOriginal(){return this.$self().original[this.$getKey(this,!0)]}$refresh(){return this.$isDirty()&&Object.entries(this.$getOriginal()).forEach(e=>{this[e[0]]=e[1]}),this}$isDirty(e){const t=this.$getOriginal();return e?(Object.keys(t).includes(e)||x(['The property"',e,'"does not exit in the model "',this.$entity(),'"']),!V(this[e],t[e])):!V(t,this.$getAttributes())}$getAttributes(){return this.$toJson(this,{relations:!1})}$toJson(e,t={}){var a;e=e!=null?e:this;const i=e.$fields(),s=(a=t.relations)!=null?a:!0,n={};for(const o in i){const h=i[o],c=e[o];if(!(h instanceof m)){n[o]=this.serializeValue(c);continue}s&&(n[o]=this.serializeRelation(c))}return n}serializeValue(e){return e===null?null:u(e)?this.serializeArray(e):typeof e=="object"?he(e)?e.toISOString():this.serializeObject(e):e}serializeArray(e){return e.map(t=>this.serializeValue(t))}serializeObject(e){const t={};if(e.serialize&&typeof e.serialize=="function")return e.serialize(e);for(const i in e)t[i]=this.serializeValue(e[i]);return t}serializeRelation(e){if(e!==void 0)return e===null?null:u(e)?e.map(t=>t.$toJson()):e.$toJson()}}d(f,"entity");d(f,"baseEntity");d(f,"baseNamespace");d(f,"namespace");d(f,"primaryKey","id");d(f,"metaKey","_meta");d(f,"hidden",["_meta"]);d(f,"visible",[]);d(f,"config");d(f,"typeKey","type");d(f,"fieldsOnDelete",{});d(f,"original",{});d(f,"schemas",{});d(f,"registries",{});d(f,"piniaOptions",{});d(f,"fieldMutators",{});d(f,"fieldCasts",{});d(f,"booted",{});d(f,"saving",()=>{});d(f,"updating",()=>{});d(f,"creating",()=>{});d(f,"deleting",()=>{});d(f,"retrieved",()=>{});d(f,"saved",()=>{});d(f,"updated",()=>{});d(f,"created",()=>{});d(f,"deleted",()=>{});export{f as M,mi as Q,pi as a,yi as b,At as c,gi as d,fi as u};
